{"version":3,"sources":["Components/PhoneNumber.js","Components/Form.js","Components/Search.js","services/personsService.js","Components/Notification.js","App.js","index.js"],"names":["PhoneNumber","name","phoneNumber","remove","id","onClick","Form","newName","newNumber","addName","handleNumberChange","handleNameChange","onSubmit","style","flex","forms","width","value","onChange","type","Search","searchString","handleSearchChange","searchResults","placeholder","map","number","key","baseUrl","axios","get","then","response","data","newPerson","request","post","console","log","delete","updatedPerson","put","Notification","message","styleType","App","useState","persons","setPersons","setNewName","setNewNumber","setNewSearch","errorMessage","setErrorMessage","successMessage","setSuccessMessage","filter","includes","useEffect","personsService","initialPhoneRecords","margin","color","background","fontsize","borderstyle","borderradius","padding","marginbottom","event","target","preventDefault","person","find","window","confirm","catch","error","setTimeout","returnedPerson","concat","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.03f7d5cb.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\n\r\nconst PhoneNumber = ({ name, phoneNumber, remove, id }) => {\r\n    return (\r\n        \r\n       <li> {name} {phoneNumber} <button onClick={() => remove(id)}>delete</button></li>\r\n                  \r\n        \r\n    )\r\n}\r\n\r\nexport default PhoneNumber","import React, { useState } from 'react'\r\n\r\nconst Form = ({ newName, newNumber, addName, handleNumberChange, handleNameChange }) => {\r\n\r\n\r\n   \r\n\r\n\r\n    return (\r\n        <div>\r\n            <form  onSubmit={addName}>\r\n            <ul style={{flex:'flex-outer'}}>\r\n                \r\n                    <li>\r\n                    <label forms=\"name\">Name:</label>\r\n         <input style={{width:'50%'}}\r\n                            value={newName}\r\n                            //when user types call handleNameChange to update state\r\n                            onChange={handleNameChange}\r\n                        />\r\n                    </li>\r\n                    <li>\r\n                    <label forms=\"phonenumber\">Phonenumber:</label>\r\n         <input\r\n                            value={newNumber}\r\n                            //when user types calle handleNumberChange to update state\r\n                            onChange={handleNumberChange}\r\n                        />\r\n                    </li>\r\n                \r\n                <li>\r\n                    <button type=\"submit\"> add </button>\r\n                </li>\r\n                </ul>\r\n            </form>\r\n\r\n        </div>\r\n    )\r\n\r\n\r\n}\r\nexport default Form","import React, { useState } from 'react'\r\nimport PhoneNumber from './PhoneNumber'\r\nconst Search = ({ searchString, handleSearchChange, searchResults, remove }) => {\r\n\r\n    //when user types call handleSearchChange to update state  \r\n    return (\r\n        <ul>\r\n\r\n            <input placeholder=\"search\" value={searchString} onChange={handleSearchChange} />\r\n\r\n            { searchResults.map(number =>\r\n                <PhoneNumber style={{'margin-top':50}} key={number.id} id={number.id} name={number.name} phoneNumber={number.phoneNumber} remove={remove}\r\n                />\r\n            )\r\n            }\r\n        </ul>\r\n\r\n    )\r\n}\r\nexport default Search","import axios from 'axios'\r\n\r\n// This module handles methods for communicating with the server.\r\n\r\nconst baseUrl = 'https://cryptic-fortress-05104.herokuapp.com/api/persons'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst create = newPerson => {\r\n    const request = axios.post(baseUrl, newPerson)\r\n    console.log(request.then(response => response.data))\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, updatedPerson) => {\r\n    console.log(updatedPerson)\r\n    const request = axios.put(baseUrl + id, updatedPerson)\r\n    console.log(request)\r\n    return request.then(response => response.data)\r\n\r\n}\r\n\r\nconst remove = id => {\r\n\r\n    const request = axios.delete(baseUrl + id)\r\n    console.log(\"next\")\r\n    console.log(request.then(response => response.data))\r\n    return request.then(response => response.data)\r\n\r\n\r\n}\r\n\r\nexport default { getAll, create, remove, update }","import React from 'react'\r\n\r\nconst Notification = ({ message, styleType }) => {\r\n\r\n\r\n\r\n    if (message === null)\r\n        return null\r\n\r\n    return (\r\n        <div style={styleType}>\r\n            {message}\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Notification","import React, { useState, useEffect } from 'react'\r\nimport PhoneNumber from './Components/PhoneNumber'\r\nimport Form from './Components/Form'\r\nimport Search from './Components/Search'\r\nimport Axios from 'axios'\r\nimport personsService from './services/personsService'\r\nimport Notification from './Components/Notification'\r\n\r\nconst App = () => {\r\n\r\n    const [persons, setPersons] = useState([])\r\n    const [newName, setNewName] = useState('')\r\n    const [newNumber, setNewNumber] = useState('')\r\n    const [searchString, setNewSearch] = useState('')\r\n    const [errorMessage, setErrorMessage] = useState(null)\r\n    const [successMessage, setSuccessMessage] = useState(null)\r\n    //this is the filtered version of our list if searchstring is empty it will display the whole person list.\r\n    let searchResults = persons.filter(number => number.name.includes(searchString))\r\n\r\n    const errorStyle = {\r\n        color: 'red',\r\n        background: 'lightgrey',\r\n        fontsize: 20,\r\n        borderstyle: 'solid',\r\n        borderradius: 5,\r\n        padding: 10,\r\n        marginbottom: 10,\r\n    }\r\n\r\n    const successStyle = {\r\n        color: 'green',\r\n        background: 'lightgrey',\r\n        fontsize: 20,\r\n        borderstyle: 'solid',\r\n        borderradius: 5,\r\n        padding: 10,\r\n        marginbottom: 10,\r\n    }\r\n\r\n\r\n    // set persons object with the information from our heroku server\r\n    useEffect(() => {\r\n        personsService\r\n            .getAll()\r\n            .then(initialPhoneRecords => {\r\n                setPersons(initialPhoneRecords)\r\n                console.log(initialPhoneRecords)\r\n\r\n            })\r\n\r\n    }, [])\r\n\r\n\r\n\r\n    const addName = (event) => {\r\n        //stops the whole page being reloaded on form submission\r\n        event.preventDefault()\r\n        const person = persons.find(number => number.name == newName)\r\n        if (person) {\r\n\r\n            const result = window.confirm(` Update ${newName}'s number? `)\r\n\r\n            if (result) {\r\n                //create a new person with old persons details and new number.\r\n                const updatedPerson = { id:person.id, name: person.name, phoneNumber: newNumber }\r\n                personsService.update(person.id, updatedPerson)\r\n\r\n                    //make a new list of persons replacing the old person with the update version\r\n                    .then(updatedPerson => {\r\n                        setPersons(persons.map(person => person.id == updatedPerson.id ?\r\n                            updatedPerson : person\r\n                        ))\r\n                      \r\n                    })\r\n                    .then\r\n                    .catch(error => {\r\n                        setErrorMessage(`${updatedPerson.name} has been removed from the database`)\r\n                        setTimeout(() => {\r\n                            setSuccessMessage(null)\r\n                        }, 5000)\r\n                    })\r\n\r\n\r\n                setSuccessMessage(`${updatedPerson.name}'s phonenumber has been update to ${updatedPerson.phoneNumber}`)\r\n                setTimeout(() => {\r\n                    setSuccessMessage(null)\r\n                }, 5000)\r\n\r\n                setNewNumber('')\r\n                setNewName('')\r\n            }\r\n\r\n        }\r\n\r\n        else {\r\n            console.log('working')\r\n            //update the persons database with new entrant details\r\n            const newPerson = { name: newName, number: newNumber }\r\n            personsService.create(newPerson)\r\n                //update the persons list with the response from the server\r\n                .then(returnedPerson => {\r\n                    setPersons(persons.concat(returnedPerson))\r\n                    setNewSearch('')\r\n                    console.log(returnedPerson)\r\n\r\n\r\n                }).catch(error => { console.log(error) })\r\n\r\n            setSuccessMessage(`${newPerson.name} has been added to the database!`)\r\n            setTimeout(() => {\r\n                setSuccessMessage(null)\r\n            }, 5000)\r\n\r\n        }\r\n    }\r\n\r\n    const removeName = (event) => {\r\n        //remove the person with the event(id) from the server\r\n\r\n        const result = window.confirm('Are you sure you want to delete this user?')\r\n        if (result) {\r\n            personsService.remove(event)\r\n                //filter out the deleted person from the persons list to update the app state and view\r\n                .then(returnedPerson => setPersons(persons.filter(person => person.id !== event)))\r\n                .catch(error => {\r\n                    setErrorMessage(\r\n                        'This person has already been removed'\r\n                    )\r\n                })\r\n\r\n            setSuccessMessage(`Succesfully removed from the database!`)\r\n            setTimeout(() => {\r\n                setSuccessMessage(null)\r\n            }, 5000)\r\n        }\r\n\r\n    }\r\n\r\n    const handleNameChange = (event) => {\r\n        //updates the newName state as user types name\r\n        setNewName(event.target.value)\r\n    }\r\n\r\n    const handleNumberChange = (event) => {\r\n\r\n        setNewNumber(event.target.value)\r\n    }\r\n\r\n    const handleSearchChange = (event) => {\r\n        console.log(event.target.value)\r\n        setNewSearch(event.target.value)\r\n\r\n    }\r\n\r\n\r\n    return (\r\n\r\n        <div style={{margin:'0-auto'}}>\r\n            <h2 >Phonebook</h2>\r\n\r\n            <Notification message={errorMessage} styleType={errorStyle} />\r\n            <Notification message={successMessage} styleType={successStyle} />\r\n\r\n            <Form newName={newName} newNumber={newNumber} persons={persons}\r\n                handleNameChange={handleNameChange} handleNumberChange={handleNumberChange}\r\n                addName={addName} />\r\n\r\n            <Search searchString={searchString} handleSearchChange={handleSearchChange}\r\n                persons={persons} searchResults={searchResults} remove={removeName} />\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}